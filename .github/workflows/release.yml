# 可选，将显示在 GitHub 存储库的“操作”选项卡中的工作流名称
name: Release CI

permissions:
  contents: write

# 指定此工作流的触发器
on:
  push:
    # 匹配特定标签 (refs/tags)
    tags:
      - "v*" # 推送事件匹配 v*, 例如 v1.0，v20.15.10 等来触发工作流
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      # 安装 Node.js
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      # 发布 Release，使用自定义名称
      - name: Generate changelog
        id: create_release
        run: npx changelogithub --draft --name 哔哩哔哩-直播间管家机器人${{ steps.vars.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  # 编译 Tauri
  build-app:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      # 安装 Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      # 使用 Rust 缓存，加快安装速度
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      # 获取 pnpm 缓存
      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "pnpm"

      # 安装依赖, 前端打包
      - name: Install app dependencies and build web
        run: pnpm install --frozen-lockfile

      # 执行构建，以及推送 github release
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 哔哩哔哩-直播间管家机器人 ${{ needs.create-release.outputs.APP_VERSION }}
          releaseBody: ""
          releaseDraft: true
          prerelease: false
